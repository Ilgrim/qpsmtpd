#!/home/perl/bin/perl -Tw
# Copyright (c) 2001 Ask Bjoern Hansen. See the LICENSE file for details.
# The "command dispatch" system is taken from colobus - http://trainedmonkey.com/colobus/
#
# this is designed to be run under tcpserver (http://cr.yp.to/ucspi-tcp.html)
# or inetd if you're into that sort of thing
#
#
# For more information see http://develooper.com/code/qpsmtpd/
#
#

use lib 'lib';
use Qpsmtpd::TcpServer;
use strict;
$| = 1;

delete $ENV{ENV};
$ENV{PATH} = '/var/qmail/bin';

# should this be ->new ?
my $qpsmtpd = Qpsmtpd::TcpServer->new();
$qpsmtpd->start_connection();
$qpsmtpd->run();

__END__


sub check_rhsbl {
  my ($rhsbl, $host) = @_;
  return 0 unless $host;
  warn "$$ checking $host in $rhsbl\n" if $TRACE > 2;
  return 1 if ((gethostbyname("$host.$rhsbl"))[4]);
  return 0;
}

sub check_dns {
  my $host = shift;

  # for stuff where we can't even parse a hostname out of the address
  return 0 unless $host;

  return 1 if $host =~ m/^\[(\d{1,3}\.){3}\d{1,3}\]$/;

  my $res = new Net::DNS::Resolver;
  return 1 if mx($res, $host);
  my $query = $res->search($host);
  if ($query) {
    foreach my $rr ($query->answer) {
      return 1 if $rr->type eq "A" or $rr->type eq "MX";
    }
  }
  else {
    warn "$$ query for $host failed: ", $res->errorstring, "\n"
      unless $res->errorstring eq "NXDOMAIN";
  }
  return 0;
}


1;
